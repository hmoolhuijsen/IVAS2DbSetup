// <auto-generated />
using System;
using IVAS2.DbSetup;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IVAS2.DbSetup.Migrations
{
    [DbContext(typeof(Model.IVAS2Context))]
    [Migration("20180911113505_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IVAS2.DbSetup.Model+Answer", b =>
                {
                    b.Property<int>("AnswerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnswerTypeID");

                    b.Property<int>("ColorID");

                    b.Property<int?>("ExaminerID");

                    b.Property<int?>("ImageID");

                    b.Property<int>("ScanID");

                    b.Property<string>("Text");

                    b.HasKey("AnswerID");

                    b.HasIndex("AnswerTypeID");

                    b.HasIndex("ColorID");

                    b.HasIndex("ExaminerID");

                    b.HasIndex("ImageID")
                        .IsUnique()
                        .HasFilter("[ImageID] IS NOT NULL");

                    b.HasIndex("ScanID");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+AnswerType", b =>
                {
                    b.Property<int>("AnswerTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnswerTypeName");

                    b.HasKey("AnswerTypeID");

                    b.ToTable("AnswerType");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+ApplicationSetting", b =>
                {
                    b.Property<int>("ApplicationSettingID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApplicationSettingName");

                    b.Property<string>("ApplicationSettingValue");

                    b.Property<bool>("IsValueNumeric");

                    b.HasKey("ApplicationSettingID");

                    b.ToTable("ApplicationSetting");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+Color", b =>
                {
                    b.Property<int>("ColorID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ColorName");

                    b.HasKey("ColorID");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+CommentType", b =>
                {
                    b.Property<int>("CommentTypeID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentTypeName");

                    b.Property<bool?>("Popup");

                    b.HasKey("CommentTypeID");

                    b.ToTable("CommentType");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+Examiner", b =>
                {
                    b.Property<int>("ExaminerID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ExaminerName");

                    b.HasKey("ExaminerID");

                    b.ToTable("Examiner");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+ExceptionCase", b =>
                {
                    b.Property<int>("CaseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("InnerMessage");

                    b.Property<string>("Message");

                    b.HasKey("CaseID");

                    b.ToTable("ExceptionCase");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+Image", b =>
                {
                    b.Property<int>("ImageID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("ImageData");

                    b.Property<string>("OriginalPath");

                    b.HasKey("ImageID");

                    b.ToTable("Image");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+IVAS2_User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserLevel");

                    b.Property<string>("UserName");

                    b.HasKey("UserID");

                    b.ToTable("IVAS2_User");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+Language", b =>
                {
                    b.Property<int>("TermID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Dutch");

                    b.Property<string>("English");

                    b.HasKey("TermID");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+Scan", b =>
                {
                    b.Property<int>("ScanID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CaseID");

                    b.Property<int>("CommentTypeID");

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<DateTime>("DateOfIssue");

                    b.Property<string>("DocumentNumber");

                    b.Property<string>("DocumentType");

                    b.Property<string>("FirstName");

                    b.Property<string>("IssuingCountry");

                    b.Property<string>("IssuingCountryCode");

                    b.Property<string>("LastName");

                    b.Property<bool>("ManualCheck");

                    b.Property<string>("Nationality");

                    b.Property<byte[]>("Sample");

                    b.Property<DateTime>("ScanTime");

                    b.Property<int>("TerminalID");

                    b.Property<string>("UserComment");

                    b.Property<int>("UserID");

                    b.HasKey("ScanID");

                    b.HasIndex("CommentTypeID");

                    b.HasIndex("TerminalID");

                    b.HasIndex("UserID");

                    b.ToTable("Scan");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+Terminal", b =>
                {
                    b.Property<int>("TerminalID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TerminalDescription");

                    b.HasKey("TerminalID");

                    b.ToTable("Terminal");
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+Answer", b =>
                {
                    b.HasOne("IVAS2.DbSetup.Model+AnswerType", "AnswerType")
                        .WithMany("Answers")
                        .HasForeignKey("AnswerTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IVAS2.DbSetup.Model+Color", "Color")
                        .WithMany("Answers")
                        .HasForeignKey("ColorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IVAS2.DbSetup.Model+Examiner", "Examiner")
                        .WithMany("Answers")
                        .HasForeignKey("ExaminerID");

                    b.HasOne("IVAS2.DbSetup.Model+Image", "Image")
                        .WithOne("Answer")
                        .HasForeignKey("IVAS2.DbSetup.Model+Answer", "ImageID");

                    b.HasOne("IVAS2.DbSetup.Model+Scan", "Scan")
                        .WithMany("Answers")
                        .HasForeignKey("ScanID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("IVAS2.DbSetup.Model+Scan", b =>
                {
                    b.HasOne("IVAS2.DbSetup.Model+CommentType", "CommentType")
                        .WithMany("Scans")
                        .HasForeignKey("CommentTypeID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IVAS2.DbSetup.Model+Terminal", "Terminal")
                        .WithMany("Scans")
                        .HasForeignKey("TerminalID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IVAS2.DbSetup.Model+IVAS2_User", "IVAS2_User")
                        .WithMany("Scans")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
